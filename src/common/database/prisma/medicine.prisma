model Medicine {
    id Int @id @default(autoincrement())
    name String
    price Float
    description String?

    fileId Int
    file File @relation(fields: [fileId], references: [id], onDelete: Cascade)

    therapeuticActionId Int
    therapeuticAction TherapeuticAction @relation(fields: [therapeuticActionId], references: [id])

    presentationId Int
    presentation Presentation @relation(fields: [presentationId], references: [id])

    mainComponentId Int
    mainComponent MainComponent @relation(fields: [mainComponentId], references: [id])

    laboratoryId Int
    laboratory Laboratory @relation(fields: [laboratoryId], references: [id])

    branches BranchMedicine[]
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CartItem CartItem[]

    OrderItem OrderItem[]

    CategoryOnMedicine CategoryOnMedicine[]

    Review Review[]

    @@index([name, price, description])
}

// DESCRIPTION

model Category {
  id Int @id @default(autoincrement())
  name String
  description String?

  medicines CategoryOnMedicine[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CategoryOnMedicine {
  id Int @id @default(autoincrement())

  medicineId Int
  categoryId Int

  medicine Medicine @relation(fields: [medicineId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model TherapeuticAction {
    id Int @id @default(autoincrement())
    name String
    description String?

    medicines Medicine[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Presentation {
    id Int @id @default(autoincrement())
    name String
    description String?

    medicines Medicine[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MainComponent {
    id Int @id @default(autoincrement())
    name String
    description String?

    medicines Medicine[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// RATING

model Review {
  id Int @id @default(autoincrement())
  rating Int @default(0)
  comment String?

  medicineId Int
  medicine Medicine @relation(fields: [medicineId], references: [id], onDelete: Cascade)

  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}